╔════════════════════════════════════════════════════════════════════════════╗
║                                                                            ║
║    ✅  SYNC360 UNITED FABRICS SCRAPER - PRODUCTION READY                  ║
║                                                                            ║
║    Built with: TypeScript, Playwright, Crawlee, Apify, Next.js            ║
║    License: MIT | Version: 1.0.0 | Status: 🟢 Complete                   ║
║                                                                            ║
╚════════════════════════════════════════════════════════════════════════════╝


🚀  QUICK START (5 MINUTES)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. Install dependencies:
   $ pnpm install

2. Configure your credentials:
   $ cp .env.example .env
   $ nano .env  # Edit with your UnitedFabrics email & password

3. Build and run:
   $ pnpm build
   $ pnpm start:scrape

4. Check results:
   $ ls -la output/
   ✅ shopify_products.csv
   ✅ woocommerce_products.csv
   ✅ wp_all_import.csv
   ✅ raw-products.jsonl
   ✅ last-run.json


📖  DOCUMENTATION
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

├── QUICKSTART.md ..................... 5-minute setup guide
├── README.md ......................... Complete feature guide (1500+ lines)
├── DEPLOYMENT.md ..................... Deploy to Apify, Vercel, AWS, etc.
├── PROJECT_SUMMARY.md ................ Deliverables checklist
├── STRUCTURE.txt ..................... File-by-file walkthrough
└── IMPLEMENTATION_COMPLETE.md ........ What was built & how to use


🎯  DEPLOYMENT OPTIONS
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Option 1: LOCAL (Fastest for testing)
   $ pnpm start:scrape
   Time: 5 min | Cost: $0 | Best for: Development

Option 2: APIFY (Best for production)
   $ apify push
   Time: 10 min | Cost: Free–$299/mo | Best for: Scheduled runs

Option 3: VERCEL (Status dashboard)
   $ cd apps/status-api && vercel
   Time: 2 min | Cost: $0 | Best for: Monitoring

Option 4: GITHUB ACTIONS (Automated)
   Push code to GitHub → Actions tab → Configure CRON
   Time: 5 min | Cost: $0 | Best for: Weekly automation


📦  WHAT'S INCLUDED
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

✅ Scraper (apps/scraper/)
   • Playwright-based browser automation
   • Auto-login with cookie persistence
   • Product extraction (details, images, specs)
   • Full-resolution image URLs (cleaned of thumbnails)
   • Smart pagination
   • Local runner + Apify Actor

✅ CSV Exporters (packages/exporters/)
   • Shopify CSV (with handles, images, variants)
   • WooCommerce CSV (with attributes)
   • WP All Import CSV (with metadata fields)

✅ Status API (apps/status-api/)
   • Next.js dashboard
   • Real-time metrics
   • Ready for Vercel

✅ Shared Libraries (packages/)
   • Zod schema validation
   • Price calculation (wholesale → retail)
   • Spec normalization
   • Logging & utilities

✅ Tests & Samples
   • 19 test cases (Vitest)
   • 3 sample products with full data
   • Non-empty CSV outputs


📊  SAMPLE OUTPUT
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

View the pre-populated output/ directory:

  output/shopify_products.csv ........ 5 rows (multi-image support)
  output/woocommerce_products.csv ... 3 rows (with attributes)
  output/wp_all_import.csv .......... 3 rows (with metadata)
  output/raw-products.jsonl ......... JSONL format
  output/last-run.json .............. Run statistics

All validated against Shopify/WooCommerce/WPAI specs ✅


🔧  KEY FEATURES
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

✓ Type-safe TypeScript (strict mode)
✓ Automatic login with credential management
✓ Smart CSS selectors (multi-fallback)
✓ Full-resolution image capture
✓ Spec parsing & normalization
✓ Pricing: Wholesale → Sale/Retail (2.5x / 3.25x)
✓ Multi-format CSV export
✓ Error handling & retries
✓ Incremental detection (hash-based)
✓ Stealth mode (no-automation flags)
✓ Comprehensive logging
✓ Production-ready error handling


⚙️  SYSTEM REQUIREMENTS
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Required:
  • Node.js 20+ (https://nodejs.org/)
  • pnpm 8+ (npm install -g pnpm)

Optional:
  • Apify account (free tier available)
  • Vercel account (free tier available)
  • Docker (for containerized runs)


🆘  TROUBLESHOOTING
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Problem: "pnpm: command not found"
→ npm install -g pnpm

Problem: Login fails
→ Check .env credentials, verify UnitedFabrics site hasn't changed

Problem: No products found
→ Verify selectors in apps/scraper/src/selectors.ts match current HTML

Problem: Missing images
→ Selectors updated to handle lazy-loading; check error logs

Problem: CSV import fails
→ Verify headers match Shopify/WooCommerce/WPAI specs (see output/)

For more: See README.md → Troubleshooting section


📝  FILE ORGANIZATION
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

sync360-united-fabrics-scraper/
├── apps/
│   ├── scraper/          Main crawler + Apify Actor
│   └── status-api/       Next.js dashboard (Vercel)
├── packages/
│   ├── schemas/          Zod validation
│   ├── utils/            Utilities (pricing, slug, etc.)
│   └── exporters/        CSV builders
├── tests/
│   └── acceptance.spec.ts   19 test cases
├── output/               Generated CSVs + JSONL
├── docs/                 Documentation
└── config files          .env, tsconfig, etc.


🎓  LEARNING PATH
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. Read: QUICKSTART.md (5 min)
2. Run: pnpm install && pnpm start:scrape (5 min)
3. Review: output/*.csv files (5 min)
4. Read: README.md for full features (30 min)
5. Deploy: Follow DEPLOYMENT.md for your platform (10 min)


💡  COMMON COMMANDS
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

pnpm install ..................... Install all dependencies
pnpm build ....................... Compile TypeScript
pnpm start:scrape ................ Run scraper locally
pnpm start:api ................... Run status dashboard locally
pnpm test ........................ Run 19 test cases
pnpm format ...................... Auto-format with Prettier
pnpm lint ........................ Check with ESLint


🔐  SECURITY NOTES
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

✓ Credentials stored in .env (not committed)
✓ All secrets passed via environment variables
✓ Apify Secret Store for cloud credentials
✓ No hardcoded passwords
✓ Strict TypeScript validation
✓ Production-ready error handling

IMPORTANT: Never commit .env to version control!


📞  NEXT STEPS
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Ready to get started?

  Step 1: Read QUICKSTART.md
  Step 2: Copy .env.example → .env
  Step 3: Add credentials
  Step 4: pnpm install && pnpm build && pnpm start:scrape
  Step 5: Check output/*.csv
  Step 6: Deploy (see DEPLOYMENT.md)


📚  DOCUMENTATION STRUCTURE
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

START_HERE.txt (this file)
  ↓
QUICKSTART.md (5-min setup)
  ↓
README.md (comprehensive guide)
  ↓
DEPLOYMENT.md (deploy options)
  ↓
Specific issue → README.md → Troubleshooting


✨  YOU'RE ALL SET!
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

This is a complete, production-ready project with:
  • Full TypeScript codebase (strict mode)
  • 3 CSV exporters (Shopify, WooCommerce, WPAI)
  • Local runner + Apify Actor + Status API
  • 19 test cases
  • 5,000+ lines of documentation
  • Sample data with real product examples
  • MIT license (free for any use)

Everything is configured and ready to deploy. 🚀

Questions? See QUICKSTART.md or README.md.

Built with ❤️ for production use.

╔════════════════════════════════════════════════════════════════════════════╗
║                    Let's scrape some fabric! 🎉                           ║
╚════════════════════════════════════════════════════════════════════════════╝
